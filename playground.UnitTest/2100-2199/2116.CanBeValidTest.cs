namespace playground.UnitTest;

public class CanBeValidTest2116
{
    [Theory]
    [InlineData("))", "11", false)]
    [InlineData("))()))", "010100", true)]
    [InlineData("()()", "0000", true)]
    [InlineData(")", "0", false)]
    [InlineData("())(()(()(())()())(())((())(()())((())))))(((((((())(()))))(", "100011110110011011010111100111011101111110000101001101001111", false)]
    [InlineData("())(((()))))()(())()())(())(()())(()))))()())))))(()())()(((()(()))()()()))))(())()))())))()(()(((())()((())))()))(())((())(())()((()))(())))(())())()(((((()()))())))()))())))(()()(()())(())())(())())(())((((((()(()(()(((()(((()))(()((())(())((())())()(()()(())())())()(((()(())((()((()(()()())())))()(()(())(()())())((((()))()(()()())))))()()(())))(())))))(", "0100001010100010100100111111101111010001111011111101010011000111011100111010110110010110111010100001000110110110000001110011101101100111011000110110011011001001100001111110101101100001111001011000101011000100000111100001011101110111100011010110110011100010101011000110001101000110100101111011011111100101010001111011110000011000101110011100100110001101101011", false)]
    public void CanBeValid(string s, string locked, bool expected)
    {
        var actual = CanBeValid2116.CanBeValid(s, locked);
        Assert.Equal(expected, actual);
    }
}
